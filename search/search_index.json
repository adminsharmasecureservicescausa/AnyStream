{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A self-hosted streaming service for your media collection. AnyStream is free and open-source software that makes it easy to manage and stream your media library from anywhere, on any device. Once running, share access to your collection privately and securely with friends or family. Find missing and newly released content for your collection.","title":"Home"},{"location":"#_1","text":"","title":""},{"location":"1-getting-started/","text":"Getting started Read this first AnyStream is a private streaming service for your media files. Third party APIs and optional external applications are used to improve the quality of your collection. You are responsible for operating any external applications that AnyStream communicates with while managing your collection. To maintain privacy it is recommended that you run AnyStream with a VPN like AirVPN or Mullvad . Requirements When installing without Podman or Docker , extra software is required before running AnyStream. Java 11+ Windows Install Manually Download the JRE 11 MSI file and run the installer. Follow the instructions until the installation is complete. For more information see \" Install Azul Zulu with MSI installer \" Install with Chocolatey choco install zulu --version = 11 .29.11 macOS Install Manually Download the JRE 11 for Intel DMG file or JRE 11 for M1 . Double click the file and follow the instructions until the installation is complete. Install with Homebrew brew tap mdogan/zulu brew install zulu-jdk11 Install with MacPorts sudo port install openjdk11-zulu FFmpeg FFmpeg is required to transcode your media library when streaming to certain devices and analyzing media files. Windows Install Manually Click here to download FFmpeg. Extract fmpeg-n4.4-latest-win64-gpl-4.4.zip and rename the bin folder to ffmpeg and move it to C:\\Program Files\\ffmpeg . Install with Chocolatey choco install ffmpeg macOS Install Manually Click here to download FFmpeg and here to download FFprobe. Extract both files into /usr/local/bin Install with Homebrew brew install ffmpeg Install with MacPorts sudo port install ffmpeg Installation AnyStream tries to provide optimal default configuration and can be run without any configuration. Configuration (Environment variables) The following optiions can be modified on your first run to customize AnyStream for your system. name value description PORT 8888 The port used to serve the web client and API. DATA_PATH macos = /Users/<user>/anystream linux = /home/<user>/anystream windows = C:\\Users\\<user>\\anystream The folder where all data generated by anystream will be stored. Note this is not the folder for your media collection. DATABASE_URL sqlite:<DATA_PATH>/config/anystream.db The file where the database will be stored. (Note the sqlite: prefix is required) FFMPEG_PATH macos = /usr/bin linux = /usr/bin windows = C:\\Program Files\\ffmpeg The directory which contains FFmpeg and FFprobe binaries. WEB_CLIENT_PATH (none) The folder which contains the Web client files to be served. By default these files are provided by the server binary. Configuration (Program arguments) If preferred, AnyStream accepts arguments instead of Environment variables. The table below maps the Environment variable name to the CLI argument, see \"Configuration (Environment variables)\" for descriptions of each option. Env Name CLI Argument PORT -port=8888 DATA_PATH -app.dataPath=\"...\" DATABASE_URL -app.databaseUrl=\"...\" FFMPEG_PATH -app.ffmpegPath=\"...\" WEB_CLIENT_PATH -app.webClientPath=\"...\" Download AnyStream Stay up-to-date It is recommended the latest version of AnyStream is used at all times, but older versions are available on the Releases page if required. One download for any Operating System The AnyStream server runs on Linux, macOS, or Windows with one download, you do not need a version specifically for your operating system. The latest release can be viewed on the Github Release page or choose your preferred format below: Download ZIP Download TAR anystream-server-0.0.1-test.zip anystream-server-0.0.1-test.tar Run on Windows Newer versions of Windows 10 include curl and tar , if you're running an older version of Windows, follow the \"Manual Download\" section. Otherwise, see the \"Command Prompt Download\" section. Manual Download Download anystream-server-0.0.1-test.zip Right click anystream-server-0.0.1-test.zip , click \"Extract All...\", then click \"Extract\" when the window appears Open the anystream-server-0.0.1-test/bin folder Double click on anystream.bat You will see a Command Prompt window appear, displaying log messages from AnyStream. Command Prompt Download > curl -LO https://github.com/DrewCarlson/AnyStream/releases/download/v0.0.1-test/anystream-server-0.0.1-test.tar > tar -xvf anystream-server-0.0.1-test.tar > cd anystream-0.0.1-test/bin > anystream -port = 8888 -P:app.ffmpegPath = \"C:\\Users\\<user>\\Downloads\\ffmpeg\" AnyStream will be running and printing log messages until you close the window or press ctrl + c . Run on Linux or macOS anystream from Terminal example $ curl -LO https://github.com/DrewCarlson/AnyStream/releases/download/v0.0.1-test/anystream-server-0.0.1-test.tar $ tar -xvf anystream-server-0.0.1-test.tar $ cd anystream-0.0.1-test/bin $ ./anystream -port = 8888 Docker CLI A small Alpine based docker image is provided at ghcr.io/drewcarlson/anystream . Docker CLI example docker run -d --name anystream \\ -v /path/to/anystream:/app/storage \\ -v /path/to/media:/app/media \\ -p 8888 :8888 \\ ghcr.io/drewcarlson/anystream:main Docker Compose Create a docker-compose.yml copy one of the following examples: Without qBittorrent version : '3.1' services : anystream : container_name : anystream image : ghcr.io/drewcarlson/anystream:main restart : unless-stopped ports : - \"8888:8888\" volumes : - /path/to/anystream:/app/storage - /path/to/media:/app/media With qBittorrent version : '3.1' services : anystream : container_name : anystream image : ghcr.io/drewcarlson/anystream:main restart : unless-stopped ports : - \"8888:8888\" environment : QBT_URL : http://qbittorrent:9090 QBT_USER : admin QBT_PASSWORD : adminadmin volumes : - /path/to/anystream:/app/storage - /path/to/media:/app/media - /path/to/qbittorrent/downloads:/app/downloads links : - qbittorrent depends_on : - qbittorrent qbittorrent : image : drewcarlson/docker-qbittorrentvpn container_name : qbittorrent restart : unless-stopped cap_add : - NET_ADMIN sysctls : - net.ipv6.conf.all.disable_ipv6=0 privileged : true environment : - VPN_ENABLED=yes - NAME_SERVERS=1.1.1.1,8.8.8.8 - WEBUI_PORT=9090 - TZ=America/Los_Angeles - UMASK_SET=022 volumes : - /path/to/qbittorrent/config:/config - /path/to/qbittorrent/downloads:/downloads - /path/to/media:/content Once you've configured the docker-compose.yml file, start it with: docker-compose up -d Setup AnyStream Assuming your instance started without errors, the web client will be available at localhost:8888 . Create an Admin User After starting a new AnyStream instance, the first user signup does not require an invitation code and will be granted global permissions. Danger It is important to register an admin user immediately after starting AnyStream for the first time. If left incomplete, unauthorized users my be able to modify system files via AnyStream. Importing Media Inviting Users Navigate to Settings > Users, then click \"Manage Invites\". Select the permissions required by the new User, then click \"Create Invite\". The new invite will be added to the list and a sharable signup link will be copied to your clipboard.","title":"Getting Started"},{"location":"1-getting-started/#getting-started","text":"","title":"Getting started"},{"location":"1-getting-started/#read-this-first","text":"AnyStream is a private streaming service for your media files. Third party APIs and optional external applications are used to improve the quality of your collection. You are responsible for operating any external applications that AnyStream communicates with while managing your collection. To maintain privacy it is recommended that you run AnyStream with a VPN like AirVPN or Mullvad .","title":"Read this first"},{"location":"1-getting-started/#requirements","text":"When installing without Podman or Docker , extra software is required before running AnyStream.","title":"Requirements"},{"location":"1-getting-started/#java-11","text":"","title":"Java 11+"},{"location":"1-getting-started/#windows","text":"Install Manually Download the JRE 11 MSI file and run the installer. Follow the instructions until the installation is complete. For more information see \" Install Azul Zulu with MSI installer \" Install with Chocolatey choco install zulu --version = 11 .29.11","title":"Windows"},{"location":"1-getting-started/#macos","text":"Install Manually Download the JRE 11 for Intel DMG file or JRE 11 for M1 . Double click the file and follow the instructions until the installation is complete. Install with Homebrew brew tap mdogan/zulu brew install zulu-jdk11 Install with MacPorts sudo port install openjdk11-zulu","title":"macOS"},{"location":"1-getting-started/#ffmpeg","text":"FFmpeg is required to transcode your media library when streaming to certain devices and analyzing media files.","title":"FFmpeg"},{"location":"1-getting-started/#windows_1","text":"Install Manually Click here to download FFmpeg. Extract fmpeg-n4.4-latest-win64-gpl-4.4.zip and rename the bin folder to ffmpeg and move it to C:\\Program Files\\ffmpeg . Install with Chocolatey choco install ffmpeg","title":"Windows"},{"location":"1-getting-started/#macos_1","text":"Install Manually Click here to download FFmpeg and here to download FFprobe. Extract both files into /usr/local/bin Install with Homebrew brew install ffmpeg Install with MacPorts sudo port install ffmpeg","title":"macOS"},{"location":"1-getting-started/#installation","text":"AnyStream tries to provide optimal default configuration and can be run without any configuration. Configuration (Environment variables) The following optiions can be modified on your first run to customize AnyStream for your system. name value description PORT 8888 The port used to serve the web client and API. DATA_PATH macos = /Users/<user>/anystream linux = /home/<user>/anystream windows = C:\\Users\\<user>\\anystream The folder where all data generated by anystream will be stored. Note this is not the folder for your media collection. DATABASE_URL sqlite:<DATA_PATH>/config/anystream.db The file where the database will be stored. (Note the sqlite: prefix is required) FFMPEG_PATH macos = /usr/bin linux = /usr/bin windows = C:\\Program Files\\ffmpeg The directory which contains FFmpeg and FFprobe binaries. WEB_CLIENT_PATH (none) The folder which contains the Web client files to be served. By default these files are provided by the server binary. Configuration (Program arguments) If preferred, AnyStream accepts arguments instead of Environment variables. The table below maps the Environment variable name to the CLI argument, see \"Configuration (Environment variables)\" for descriptions of each option. Env Name CLI Argument PORT -port=8888 DATA_PATH -app.dataPath=\"...\" DATABASE_URL -app.databaseUrl=\"...\" FFMPEG_PATH -app.ffmpegPath=\"...\" WEB_CLIENT_PATH -app.webClientPath=\"...\"","title":"Installation"},{"location":"1-getting-started/#download-anystream","text":"Stay up-to-date It is recommended the latest version of AnyStream is used at all times, but older versions are available on the Releases page if required. One download for any Operating System The AnyStream server runs on Linux, macOS, or Windows with one download, you do not need a version specifically for your operating system. The latest release can be viewed on the Github Release page or choose your preferred format below: Download ZIP Download TAR anystream-server-0.0.1-test.zip anystream-server-0.0.1-test.tar","title":"Download AnyStream"},{"location":"1-getting-started/#run-on-windows","text":"Newer versions of Windows 10 include curl and tar , if you're running an older version of Windows, follow the \"Manual Download\" section. Otherwise, see the \"Command Prompt Download\" section. Manual Download Download anystream-server-0.0.1-test.zip Right click anystream-server-0.0.1-test.zip , click \"Extract All...\", then click \"Extract\" when the window appears Open the anystream-server-0.0.1-test/bin folder Double click on anystream.bat You will see a Command Prompt window appear, displaying log messages from AnyStream. Command Prompt Download > curl -LO https://github.com/DrewCarlson/AnyStream/releases/download/v0.0.1-test/anystream-server-0.0.1-test.tar > tar -xvf anystream-server-0.0.1-test.tar > cd anystream-0.0.1-test/bin > anystream -port = 8888 -P:app.ffmpegPath = \"C:\\Users\\<user>\\Downloads\\ffmpeg\" AnyStream will be running and printing log messages until you close the window or press ctrl + c .","title":"Run on Windows"},{"location":"1-getting-started/#run-on-linux-or-macos","text":"anystream from Terminal example $ curl -LO https://github.com/DrewCarlson/AnyStream/releases/download/v0.0.1-test/anystream-server-0.0.1-test.tar $ tar -xvf anystream-server-0.0.1-test.tar $ cd anystream-0.0.1-test/bin $ ./anystream -port = 8888","title":"Run on Linux or macOS"},{"location":"1-getting-started/#docker-cli","text":"A small Alpine based docker image is provided at ghcr.io/drewcarlson/anystream . Docker CLI example docker run -d --name anystream \\ -v /path/to/anystream:/app/storage \\ -v /path/to/media:/app/media \\ -p 8888 :8888 \\ ghcr.io/drewcarlson/anystream:main","title":"Docker CLI"},{"location":"1-getting-started/#docker-compose","text":"Create a docker-compose.yml copy one of the following examples: Without qBittorrent version : '3.1' services : anystream : container_name : anystream image : ghcr.io/drewcarlson/anystream:main restart : unless-stopped ports : - \"8888:8888\" volumes : - /path/to/anystream:/app/storage - /path/to/media:/app/media With qBittorrent version : '3.1' services : anystream : container_name : anystream image : ghcr.io/drewcarlson/anystream:main restart : unless-stopped ports : - \"8888:8888\" environment : QBT_URL : http://qbittorrent:9090 QBT_USER : admin QBT_PASSWORD : adminadmin volumes : - /path/to/anystream:/app/storage - /path/to/media:/app/media - /path/to/qbittorrent/downloads:/app/downloads links : - qbittorrent depends_on : - qbittorrent qbittorrent : image : drewcarlson/docker-qbittorrentvpn container_name : qbittorrent restart : unless-stopped cap_add : - NET_ADMIN sysctls : - net.ipv6.conf.all.disable_ipv6=0 privileged : true environment : - VPN_ENABLED=yes - NAME_SERVERS=1.1.1.1,8.8.8.8 - WEBUI_PORT=9090 - TZ=America/Los_Angeles - UMASK_SET=022 volumes : - /path/to/qbittorrent/config:/config - /path/to/qbittorrent/downloads:/downloads - /path/to/media:/content Once you've configured the docker-compose.yml file, start it with: docker-compose up -d","title":"Docker Compose"},{"location":"1-getting-started/#setup-anystream","text":"Assuming your instance started without errors, the web client will be available at localhost:8888 .","title":"Setup AnyStream"},{"location":"1-getting-started/#create-an-admin-user","text":"After starting a new AnyStream instance, the first user signup does not require an invitation code and will be granted global permissions. Danger It is important to register an admin user immediately after starting AnyStream for the first time. If left incomplete, unauthorized users my be able to modify system files via AnyStream.","title":"Create an Admin User"},{"location":"1-getting-started/#importing-media","text":"","title":"Importing Media"},{"location":"1-getting-started/#inviting-users","text":"Navigate to Settings > Users, then click \"Manage Invites\". Select the permissions required by the new User, then click \"Create Invite\". The new invite will be added to the list and a sharable signup link will be copied to your clipboard.","title":"Inviting Users"},{"location":"2-naming-media-files/","text":"Naming Media Files When adding media files to AnyStream, it will attempt to identify and download metadata for each piece of content. This process works by parsing folder and file names to identify Movies, TV Shows, Episodes, etc. AnyStream attempts to support the most common naming conventions for importing. Movies TV Shows Subtitle Files","title":"Naming Media Files"},{"location":"2-naming-media-files/#naming-media-files","text":"When adding media files to AnyStream, it will attempt to identify and download metadata for each piece of content. This process works by parsing folder and file names to identify Movies, TV Shows, Episodes, etc. AnyStream attempts to support the most common naming conventions for importing.","title":"Naming Media Files"},{"location":"2-naming-media-files/#movies","text":"","title":"Movies"},{"location":"2-naming-media-files/#tv-shows","text":"","title":"TV Shows"},{"location":"2-naming-media-files/#subtitle-files","text":"","title":"Subtitle Files"},{"location":"3-clients-and-mobile/","text":"Clients and Mobile Applications AnyStream makes your library accessible from anywhere with native web and mobile applications. More devices will be supported in the future. Web AnyStream provides a built-in website to view and manage your library. Android / Google TV Coming soon iOS / Apple TV Coming soon Chromecast Coming Soon","title":"Clients and Mobile Apps"},{"location":"3-clients-and-mobile/#clients-and-mobile-applications","text":"AnyStream makes your library accessible from anywhere with native web and mobile applications. More devices will be supported in the future.","title":"Clients and Mobile Applications"},{"location":"3-clients-and-mobile/#web","text":"AnyStream provides a built-in website to view and manage your library.","title":"Web"},{"location":"3-clients-and-mobile/#android-google-tv","text":"Coming soon","title":"Android / Google TV"},{"location":"3-clients-and-mobile/#ios-apple-tv","text":"Coming soon","title":"iOS / Apple TV"},{"location":"3-clients-and-mobile/#chromecast","text":"Coming Soon","title":"Chromecast"},{"location":"4-connecting-qbittorrent/","text":"Connecting qBittorrent qBittorrent is a free and reliable P2P Bittorrent client. AnyStream can communicate with qBittorrent to manage importing and organizing new media into your library. Warning You assume all responsibility and risk when using qBittorrent. The BitTorrent protocol is not designed for privacy, ensure you've configured qBittorrent and network firewalls correctly. It is recommended to use a VPN service like AirVPN or Mullvad with qBittorrent.","title":"Connecting qBittorrent"},{"location":"4-connecting-qbittorrent/#connecting-qbittorrent","text":"qBittorrent is a free and reliable P2P Bittorrent client. AnyStream can communicate with qBittorrent to manage importing and organizing new media into your library. Warning You assume all responsibility and risk when using qBittorrent. The BitTorrent protocol is not designed for privacy, ensure you've configured qBittorrent and network firewalls correctly. It is recommended to use a VPN service like AirVPN or Mullvad with qBittorrent.","title":"Connecting qBittorrent"},{"location":"development/documentation/","text":"Documentation Documentation is created with MkDocs using Material for MkDocs . MkDocs is configured with mkdocs.yml and documentation source is stored in the docs folder. Install Python Download and install the latest version of Python. macOS macOS Using Homebrew brew install python Windows Windows Download and install the recommended version from python.org . Or with Chocolatey choco install python Install MkDocs and plugins Open a new Terminal or Command Prompt window. pip install mkdocs mkdocs-material mkdocs-markdownextradata-plugin For more information see the MkDocs Installation Guide and the Material for MkDocs Installation Guide . Writing Documentation Documentation source files are written in Markdown . For navigation and advanced formatting features, see the MkDocs Writing your docs guide and Material for MkDocs Reference . Variables Some dynamic variables are made available, they can be used with the {{ name }} syntax. Below are the available variables. Name Value version The current release version, for example 2.3.5 (No v prefix) View docs locally To view the docs locally, open a terminal or command prompt and cd into your anystream folder then run mkdocs serve Your changes will be served at http://127.0.0.1:8000 . After saving changes, the webpage will reload automatically. Deployment Changes are deployed to docs.anystream.dev automatically when merged into the main branch.","title":"Documentation"},{"location":"development/documentation/#documentation","text":"Documentation is created with MkDocs using Material for MkDocs . MkDocs is configured with mkdocs.yml and documentation source is stored in the docs folder.","title":"Documentation"},{"location":"development/documentation/#install-python","text":"Download and install the latest version of Python. macOS","title":"Install Python"},{"location":"development/documentation/#macos","text":"Using Homebrew brew install python Windows","title":"macOS"},{"location":"development/documentation/#windows","text":"Download and install the recommended version from python.org . Or with Chocolatey choco install python","title":"Windows"},{"location":"development/documentation/#install-mkdocs-and-plugins","text":"Open a new Terminal or Command Prompt window. pip install mkdocs mkdocs-material mkdocs-markdownextradata-plugin For more information see the MkDocs Installation Guide and the Material for MkDocs Installation Guide .","title":"Install MkDocs and plugins"},{"location":"development/documentation/#writing-documentation","text":"Documentation source files are written in Markdown . For navigation and advanced formatting features, see the MkDocs Writing your docs guide and Material for MkDocs Reference . Variables Some dynamic variables are made available, they can be used with the {{ name }} syntax. Below are the available variables. Name Value version The current release version, for example 2.3.5 (No v prefix)","title":"Writing Documentation"},{"location":"development/documentation/#view-docs-locally","text":"To view the docs locally, open a terminal or command prompt and cd into your anystream folder then run mkdocs serve Your changes will be served at http://127.0.0.1:8000 . After saving changes, the webpage will reload automatically.","title":"View docs locally"},{"location":"development/documentation/#deployment","text":"Changes are deployed to docs.anystream.dev automatically when merged into the main branch.","title":"Deployment"}]}